buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

ext {
    if (mc_minor == "0") {
        mc_version = "1.${mc_major}"
    } else {
        mc_version = "1.${mc_major}.${mc_minor}"
    }
}

version = "${mc_version}-${major}.${minor}.${patch}"
group = mod_id
archivesBaseName = "${mod_name.replaceAll(' ','')}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                bookdisplay {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                bookdisplay {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bookdisplay', '--all', '--output', file('src/generated/resources/')

            mods {
                bookdisplay {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url "http://maven.blamejared.com/" }
    maven { url "http://maven.thiakil.com" }
    maven { url "http://maven.cil.li/" }
    maven { url "https://maven.theillusivec4.top/" }
}


dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Mod APIs
    compile fileTree(dir: 'lib', include: ['*.jar'])

    compile fg.deobf("slimeknights.mantle:Mantle:${mc_version}+")
    // deobfCompile "com.azanor.baubles:Baubles:1.${mc_major}+"
    
    compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:0.${mc_major}+")

    // deobfCompile "li.cil.oc:OpenComputers:MC${mc_version}+"
    // deobfCompile "li.cil.tis3d:TIS-3D:MC${mc_version}+"
    
    compile fg.deobf("vazkii.autoreglib:AutoRegLib:1.5+")
    compile fg.deobf("vazkii.patchouli:Patchouli:${mc_version}+")

    compile fg.deobf("vazkii.botania:Botania:r1.15-386+@jar")

    // Runtime
    // runtime "slimeknights:TConstruct:${mc_version}+@jar"
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:+")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-${mc_version}+")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "bookdisplay",
                "Specification-Vendor"    : "astavie",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "astavie",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "astavie"
            artifactId mod_id
            version project.version

            artifact jar
            artifact deobfJar
            artifact sourcesJar
        }
    }
}

publishing {
    repositories {
        maven {
            url "/home/astavie/Documents/Code/Maven"
        }
    }
}

task pushMaven(type: Exec) {
    workingDir '/home/astavie/Documents/Code/Maven'
    commandLine 'bash', 'push.sh', "astavie/${mod_id}", "Maven, ${mod_name}, ${project.version}"
}

pushMaven.dependsOn publish

defaultTasks 'clean', 'build'

